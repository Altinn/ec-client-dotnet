//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Runtime.Serialization;

namespace EC_Endpoint_Client.Service_References.ReporteeArchive {
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AltinnFault", Namespace="http://www.altinn.no/services/common/fault/2009/10")]
    [Serializable()]
    public partial class AltinnFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string AltinnErrorMessageField;
        
        [OptionalField()]
        private string AltinnExtendedErrorMessageField;
        
        [OptionalField()]
        private string AltinnLocalizedErrorMessageField;
        
        [OptionalField()]
        private string ErrorGuidField;
        
        [OptionalField()]
        private int ErrorIDField;
        
        [OptionalField()]
        private string UserGuidField;
        
        [OptionalField()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string AltinnErrorMessage {
            get {
                return this.AltinnErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AltinnErrorMessageField, value) != true)) {
                    this.AltinnErrorMessageField = value;
                    this.RaisePropertyChanged("AltinnErrorMessage");
                }
            }
        }
        
        [DataMember()]
        public string AltinnExtendedErrorMessage {
            get {
                return this.AltinnExtendedErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AltinnExtendedErrorMessageField, value) != true)) {
                    this.AltinnExtendedErrorMessageField = value;
                    this.RaisePropertyChanged("AltinnExtendedErrorMessage");
                }
            }
        }
        
        [DataMember()]
        public string AltinnLocalizedErrorMessage {
            get {
                return this.AltinnLocalizedErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.AltinnLocalizedErrorMessageField, value) != true)) {
                    this.AltinnLocalizedErrorMessageField = value;
                    this.RaisePropertyChanged("AltinnLocalizedErrorMessage");
                }
            }
        }
        
        [DataMember()]
        public string ErrorGuid {
            get {
                return this.ErrorGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorGuidField, value) != true)) {
                    this.ErrorGuidField = value;
                    this.RaisePropertyChanged("ErrorGuid");
                }
            }
        }
        
        [DataMember()]
        public int ErrorID {
            get {
                return this.ErrorIDField;
            }
            set {
                if ((this.ErrorIDField.Equals(value) != true)) {
                    this.ErrorIDField = value;
                    this.RaisePropertyChanged("ErrorID");
                }
            }
        }
        
        [DataMember()]
        public string UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.UserGuidField, value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [DataMember()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchivedFormTaskV2", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    [Serializable()]
    public partial class ArchivedFormTaskV2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private ArchiveTaskBEV2List ArchiveTaskListField;
        
        [OptionalField()]
        private ArchivedAttachmentBEV2List ArchivedAttachmentListField;
        
        [OptionalField()]
        private System.DateTime ArchivedDateTimeField;
        
        [OptionalField()]
        private ArchivedFormBEList ArchivedFormListField;
        
        [OptionalField()]
        private ArchivedFormTaskSigningStepBEV2List ArchivedFormTaskSigningStepListField;
        
        [OptionalField()]
        private string ExternalServiceCodeField;
        
        [OptionalField()]
        private int ExternalServiceEditionCodeField;
        
        [OptionalField()]
        private double InvoiceInformationField;
        
        [OptionalField()]
        private System.DateTime LastChangedField;
        
        [OptionalField()]
        private KeyExternalBE PasswordEncryptedSymmetricKeyField;
        
        [OptionalField()]
        private int ReporteeElementIDField;
        
        [OptionalField()]
        private int ReporteeIDField;
        
        [OptionalField()]
        private KeyExternalBE SOEncryptedSymmetricdKeyField;
        
        [OptionalField()]
        private string ServiceOwnerField;
        
        [OptionalField()]
        private string ssnOrgNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public ArchiveTaskBEV2List ArchiveTaskList {
            get {
                return this.ArchiveTaskListField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchiveTaskListField, value) != true)) {
                    this.ArchiveTaskListField = value;
                    this.RaisePropertyChanged("ArchiveTaskList");
                }
            }
        }
        
        [DataMember()]
        public ArchivedAttachmentBEV2List ArchivedAttachmentList {
            get {
                return this.ArchivedAttachmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchivedAttachmentListField, value) != true)) {
                    this.ArchivedAttachmentListField = value;
                    this.RaisePropertyChanged("ArchivedAttachmentList");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime ArchivedDateTime {
            get {
                return this.ArchivedDateTimeField;
            }
            set {
                if ((this.ArchivedDateTimeField.Equals(value) != true)) {
                    this.ArchivedDateTimeField = value;
                    this.RaisePropertyChanged("ArchivedDateTime");
                }
            }
        }
        
        [DataMember()]
        public ArchivedFormBEList ArchivedFormList {
            get {
                return this.ArchivedFormListField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchivedFormListField, value) != true)) {
                    this.ArchivedFormListField = value;
                    this.RaisePropertyChanged("ArchivedFormList");
                }
            }
        }
        
        [DataMember()]
        public ArchivedFormTaskSigningStepBEV2List ArchivedFormTaskSigningStepList {
            get {
                return this.ArchivedFormTaskSigningStepListField;
            }
            set {
                if ((object.ReferenceEquals(this.ArchivedFormTaskSigningStepListField, value) != true)) {
                    this.ArchivedFormTaskSigningStepListField = value;
                    this.RaisePropertyChanged("ArchivedFormTaskSigningStepList");
                }
            }
        }
        
        [DataMember()]
        public string ExternalServiceCode {
            get {
                return this.ExternalServiceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalServiceCodeField, value) != true)) {
                    this.ExternalServiceCodeField = value;
                    this.RaisePropertyChanged("ExternalServiceCode");
                }
            }
        }
        
        [DataMember()]
        public int ExternalServiceEditionCode {
            get {
                return this.ExternalServiceEditionCodeField;
            }
            set {
                if ((this.ExternalServiceEditionCodeField.Equals(value) != true)) {
                    this.ExternalServiceEditionCodeField = value;
                    this.RaisePropertyChanged("ExternalServiceEditionCode");
                }
            }
        }
        
        [DataMember()]
        public double InvoiceInformation {
            get {
                return this.InvoiceInformationField;
            }
            set {
                if ((this.InvoiceInformationField.Equals(value) != true)) {
                    this.InvoiceInformationField = value;
                    this.RaisePropertyChanged("InvoiceInformation");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [DataMember()]
        public KeyExternalBE PasswordEncryptedSymmetricKey {
            get {
                return this.PasswordEncryptedSymmetricKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordEncryptedSymmetricKeyField, value) != true)) {
                    this.PasswordEncryptedSymmetricKeyField = value;
                    this.RaisePropertyChanged("PasswordEncryptedSymmetricKey");
                }
            }
        }
        
        [DataMember()]
        public int ReporteeElementID {
            get {
                return this.ReporteeElementIDField;
            }
            set {
                if ((this.ReporteeElementIDField.Equals(value) != true)) {
                    this.ReporteeElementIDField = value;
                    this.RaisePropertyChanged("ReporteeElementID");
                }
            }
        }
        
        [DataMember()]
        public int ReporteeID {
            get {
                return this.ReporteeIDField;
            }
            set {
                if ((this.ReporteeIDField.Equals(value) != true)) {
                    this.ReporteeIDField = value;
                    this.RaisePropertyChanged("ReporteeID");
                }
            }
        }
        
        [DataMember()]
        public KeyExternalBE SOEncryptedSymmetricdKey {
            get {
                return this.SOEncryptedSymmetricdKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SOEncryptedSymmetricdKeyField, value) != true)) {
                    this.SOEncryptedSymmetricdKeyField = value;
                    this.RaisePropertyChanged("SOEncryptedSymmetricdKey");
                }
            }
        }
        
        [DataMember()]
        public string ServiceOwner {
            get {
                return this.ServiceOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOwnerField, value) != true)) {
                    this.ServiceOwnerField = value;
                    this.RaisePropertyChanged("ServiceOwner");
                }
            }
        }
        
        [DataMember()]
        public string ssnOrgNumber {
            get {
                return this.ssnOrgNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ssnOrgNumberField, value) != true)) {
                    this.ssnOrgNumberField = value;
                    this.RaisePropertyChanged("ssnOrgNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="KeyExternalBE", Namespace="http://schemas.altinn.no/services/Archive/KeyManagement/2010/10")]
    [Serializable()]
    public partial class KeyExternalBE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string CertificateThumbprintField;
        
        [OptionalField()]
        private string KeyField;
        
        [OptionalField()]
        private int KeyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string CertificateThumbprint {
            get {
                return this.CertificateThumbprintField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateThumbprintField, value) != true)) {
                    this.CertificateThumbprintField = value;
                    this.RaisePropertyChanged("CertificateThumbprint");
                }
            }
        }
        
        [DataMember()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [DataMember()]
        public int KeyID {
            get {
                return this.KeyIDField;
            }
            set {
                if ((this.KeyIDField.Equals(value) != true)) {
                    this.KeyIDField = value;
                    this.RaisePropertyChanged("KeyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [CollectionDataContract(Name="ArchiveTaskBEV2List", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10", ItemName="ArchiveTaskV2")]
    [Serializable()]
    public class ArchiveTaskBEV2List : System.Collections.Generic.List<ArchiveTaskV2> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [CollectionDataContract(Name="ArchivedAttachmentBEV2List", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10", ItemName="ArchivedAttachmentBEV2")]
    [Serializable()]
    public class ArchivedAttachmentBEV2List : System.Collections.Generic.List<ArchivedAttachmentBEV2> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [CollectionDataContract(Name="ArchivedFormBEList", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2009/10", ItemName="ArchivedFormBE")]
    [Serializable()]
    public class ArchivedFormBEList : System.Collections.Generic.List<ArchivedFormBE> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [CollectionDataContract(Name="ArchivedFormTaskSigningStepBEV2List", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10", ItemName="ArchivedFormTaskSigningStepBEV2")]
    [Serializable()]
    public class ArchivedFormTaskSigningStepBEV2List : System.Collections.Generic.List<ArchivedFormTaskSigningStepBEV2> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchiveTaskV2", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    [Serializable()]
    public partial class ArchiveTaskV2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private int EndUserSystemIDField;
        
        [OptionalField()]
        private System.DateTime LastChangedField;
        
        [OptionalField()]
        private int NumberOfSignaturesAddedField;
        
        [OptionalField()]
        private int ProcessStepID_FKField;
        
        [OptionalField()]
        private bool SentCompleteField;
        
        [OptionalField()]
        private int TaskIDField;
        
        [OptionalField()]
        private int UserDefinedNumberOfSignaturesRequiredField;
        
        [OptionalField()]
        private string WorkflowReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public int EndUserSystemID {
            get {
                return this.EndUserSystemIDField;
            }
            set {
                if ((this.EndUserSystemIDField.Equals(value) != true)) {
                    this.EndUserSystemIDField = value;
                    this.RaisePropertyChanged("EndUserSystemID");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime LastChanged {
            get {
                return this.LastChangedField;
            }
            set {
                if ((this.LastChangedField.Equals(value) != true)) {
                    this.LastChangedField = value;
                    this.RaisePropertyChanged("LastChanged");
                }
            }
        }
        
        [DataMember()]
        public int NumberOfSignaturesAdded {
            get {
                return this.NumberOfSignaturesAddedField;
            }
            set {
                if ((this.NumberOfSignaturesAddedField.Equals(value) != true)) {
                    this.NumberOfSignaturesAddedField = value;
                    this.RaisePropertyChanged("NumberOfSignaturesAdded");
                }
            }
        }
        
        [DataMember()]
        public int ProcessStepID_FK {
            get {
                return this.ProcessStepID_FKField;
            }
            set {
                if ((this.ProcessStepID_FKField.Equals(value) != true)) {
                    this.ProcessStepID_FKField = value;
                    this.RaisePropertyChanged("ProcessStepID_FK");
                }
            }
        }
        
        [DataMember()]
        public bool SentComplete {
            get {
                return this.SentCompleteField;
            }
            set {
                if ((this.SentCompleteField.Equals(value) != true)) {
                    this.SentCompleteField = value;
                    this.RaisePropertyChanged("SentComplete");
                }
            }
        }
        
        [DataMember()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [DataMember()]
        public int UserDefinedNumberOfSignaturesRequired {
            get {
                return this.UserDefinedNumberOfSignaturesRequiredField;
            }
            set {
                if ((this.UserDefinedNumberOfSignaturesRequiredField.Equals(value) != true)) {
                    this.UserDefinedNumberOfSignaturesRequiredField = value;
                    this.RaisePropertyChanged("UserDefinedNumberOfSignaturesRequired");
                }
            }
        }
        
        [DataMember()]
        public string WorkflowReference {
            get {
                return this.WorkflowReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowReferenceField, value) != true)) {
                    this.WorkflowReferenceField = value;
                    this.RaisePropertyChanged("WorkflowReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchivedAttachmentBEV2", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    [Serializable()]
    public partial class ArchivedAttachmentBEV2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private AttachmentFunctionTypeV2 AttachmentFunctionTypeField;
        
        [OptionalField()]
        private int AttachmentIDField;
        
        [OptionalField()]
        private string AttachmentNameField;
        
        [OptionalField()]
        private int CreatedByUserIDField;
        
        [OptionalField()]
        private System.DateTime CreatedDateTimeField;
        
        [OptionalField()]
        private bool IsAddedAfterFormFillinField;
        
        [OptionalField()]
        private bool IsEncryptedField;
        
        [OptionalField()]
        private AttachmentType MimeTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public AttachmentFunctionTypeV2 AttachmentFunctionType {
            get {
                return this.AttachmentFunctionTypeField;
            }
            set {
                if ((this.AttachmentFunctionTypeField.Equals(value) != true)) {
                    this.AttachmentFunctionTypeField = value;
                    this.RaisePropertyChanged("AttachmentFunctionType");
                }
            }
        }
        
        [DataMember()]
        public int AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((this.AttachmentIDField.Equals(value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [DataMember()]
        public string AttachmentName {
            get {
                return this.AttachmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentNameField, value) != true)) {
                    this.AttachmentNameField = value;
                    this.RaisePropertyChanged("AttachmentName");
                }
            }
        }
        
        [DataMember()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [DataMember()]
        public bool IsAddedAfterFormFillin {
            get {
                return this.IsAddedAfterFormFillinField;
            }
            set {
                if ((this.IsAddedAfterFormFillinField.Equals(value) != true)) {
                    this.IsAddedAfterFormFillinField = value;
                    this.RaisePropertyChanged("IsAddedAfterFormFillin");
                }
            }
        }
        
        [DataMember()]
        public bool IsEncrypted {
            get {
                return this.IsEncryptedField;
            }
            set {
                if ((this.IsEncryptedField.Equals(value) != true)) {
                    this.IsEncryptedField = value;
                    this.RaisePropertyChanged("IsEncrypted");
                }
            }
        }
        
        [DataMember()]
        public AttachmentType MimeTypeName {
            get {
                return this.MimeTypeNameField;
            }
            set {
                if ((this.MimeTypeNameField.Equals(value) != true)) {
                    this.MimeTypeNameField = value;
                    this.RaisePropertyChanged("MimeTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AttachmentFunctionTypeV2", Namespace="http://schemas.altinn.no/services/ServiceEngine/Subscription/2010/10")]
    public enum AttachmentFunctionTypeV2 : int {
        
        [EnumMember()]
        Default = 0,
        
        [EnumMember()]
        Unspecified = 1,
        
        [EnumMember()]
        Invoice = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AttachmentType", Namespace="http://schemas.altinn.no/services/serviceEntity/2009/10")]
    public enum AttachmentType : int {
        
        [EnumMember()]
        application_None = 0,
        
        [EnumMember()]
        application_pdf = 1,
        
        [EnumMember()]
        application_msword = 2,
        
        [EnumMember()]
        application_vnd_ms_excel = 3,
        
        [EnumMember()]
        application_vnd_oasis_opendocument_text = 4,
        
        [EnumMember()]
        application_vnd_oasis_opendocument_presentation = 5,
        
        [EnumMember()]
        application_vnd_oasis_opendocument_spreadsheet = 6,
        
        [EnumMember()]
        application_rtf = 7,
        
        [EnumMember()]
        application_vnd_ms_powerpoint = 8,
        
        [EnumMember()]
        application_postscript = 9,
        
        [EnumMember()]
        application_zip = 10,
        
        [EnumMember()]
        text_plain = 11,
        
        [EnumMember()]
        text_html = 12,
        
        [EnumMember()]
        text_xml = 13,
        
        [EnumMember()]
        text_rtf = 14,
        
        [EnumMember()]
        text_richtext = 15,
        
        [EnumMember()]
        binary_octet_stream = 16,
        
        [EnumMember()]
        not_Applicable = 17,
        
        [EnumMember()]
        MTOM = 18,
        
        [EnumMember()]
        BASE64 = 19,
        
        [EnumMember()]
        image_jpeg = 20,
        
        [EnumMember()]
        image_gif = 21,
        
        [EnumMember()]
        image_bmp = 22,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchivedFormBE", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2009/10")]
    [Serializable()]
    public partial class ArchivedFormBE : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private string DataFormatIdField;
        
        [OptionalField()]
        private int DataFormatVersionField;
        
        [OptionalField()]
        private string FormDataXMLField;
        
        [OptionalField()]
        private int FormIDField;
        
        [OptionalField()]
        private string FormNameField;
        
        [OptionalField()]
        private string FormPaymentInfoField;
        
        [OptionalField()]
        private string FormPresentationFieldValueField;
        
        [OptionalField()]
        private string FormSummaryField;
        
        [OptionalField()]
        private int ParentReferenceField;
        
        [OptionalField()]
        private string PaymentInformationE2BField;
        
        [OptionalField()]
        private string PaymentInformationHTMLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public string DataFormatId {
            get {
                return this.DataFormatIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DataFormatIdField, value) != true)) {
                    this.DataFormatIdField = value;
                    this.RaisePropertyChanged("DataFormatId");
                }
            }
        }
        
        [DataMember()]
        public int DataFormatVersion {
            get {
                return this.DataFormatVersionField;
            }
            set {
                if ((this.DataFormatVersionField.Equals(value) != true)) {
                    this.DataFormatVersionField = value;
                    this.RaisePropertyChanged("DataFormatVersion");
                }
            }
        }
        
        [DataMember()]
        public string FormDataXML {
            get {
                return this.FormDataXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.FormDataXMLField, value) != true)) {
                    this.FormDataXMLField = value;
                    this.RaisePropertyChanged("FormDataXML");
                }
            }
        }
        
        [DataMember()]
        public int FormID {
            get {
                return this.FormIDField;
            }
            set {
                if ((this.FormIDField.Equals(value) != true)) {
                    this.FormIDField = value;
                    this.RaisePropertyChanged("FormID");
                }
            }
        }
        
        [DataMember()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [DataMember()]
        public string FormPaymentInfo {
            get {
                return this.FormPaymentInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.FormPaymentInfoField, value) != true)) {
                    this.FormPaymentInfoField = value;
                    this.RaisePropertyChanged("FormPaymentInfo");
                }
            }
        }
        
        [DataMember()]
        public string FormPresentationFieldValue {
            get {
                return this.FormPresentationFieldValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FormPresentationFieldValueField, value) != true)) {
                    this.FormPresentationFieldValueField = value;
                    this.RaisePropertyChanged("FormPresentationFieldValue");
                }
            }
        }
        
        [DataMember()]
        public string FormSummary {
            get {
                return this.FormSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.FormSummaryField, value) != true)) {
                    this.FormSummaryField = value;
                    this.RaisePropertyChanged("FormSummary");
                }
            }
        }
        
        [DataMember()]
        public int ParentReference {
            get {
                return this.ParentReferenceField;
            }
            set {
                if ((this.ParentReferenceField.Equals(value) != true)) {
                    this.ParentReferenceField = value;
                    this.RaisePropertyChanged("ParentReference");
                }
            }
        }
        
        [DataMember()]
        public string PaymentInformationE2B {
            get {
                return this.PaymentInformationE2BField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentInformationE2BField, value) != true)) {
                    this.PaymentInformationE2BField = value;
                    this.RaisePropertyChanged("PaymentInformationE2B");
                }
            }
        }
        
        [DataMember()]
        public string PaymentInformationHTML {
            get {
                return this.PaymentInformationHTMLField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentInformationHTMLField, value) != true)) {
                    this.PaymentInformationHTMLField = value;
                    this.RaisePropertyChanged("PaymentInformationHTML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchivedFormTaskSigningStepBEV2", Namespace="http://schemas.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    [Serializable()]
    public partial class ArchivedFormTaskSigningStepBEV2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private int AuthenticationLevelIDField;
        
        [OptionalField()]
        private int AuthenticationMethodField;
        
        [OptionalField()]
        private string CertificateIssuedByNameField;
        
        [OptionalField()]
        private string CertificateIssuedForNameField;
        
        [OptionalField()]
        private System.DateTime CertificateValidFromField;
        
        [OptionalField()]
        private System.DateTime CertificateValidToField;
        
        [OptionalField()]
        private System.DateTime CreatedDateTimeField;
        
        [OptionalField()]
        private WorkFlowGroupSigningType IsSigningAllRequiredField;
        
        [OptionalField()]
        private int ProcessStepIDField;
        
        [OptionalField()]
        private byte[] SignatureField;
        
        [OptionalField()]
        private int SignatureIDField;
        
        [OptionalField()]
        private string SignatureTextField;
        
        [OptionalField()]
        private int[] SignedAttachmentListField;
        
        [OptionalField()]
        private int SignedByUserField;
        
        [OptionalField()]
        private string SignedByUserNameField;
        
        [OptionalField()]
        private string SignedByUserSSNField;
        
        [OptionalField()]
        private int[] SignedFromListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public int AuthenticationLevelID {
            get {
                return this.AuthenticationLevelIDField;
            }
            set {
                if ((this.AuthenticationLevelIDField.Equals(value) != true)) {
                    this.AuthenticationLevelIDField = value;
                    this.RaisePropertyChanged("AuthenticationLevelID");
                }
            }
        }
        
        [DataMember()]
        public int AuthenticationMethod {
            get {
                return this.AuthenticationMethodField;
            }
            set {
                if ((this.AuthenticationMethodField.Equals(value) != true)) {
                    this.AuthenticationMethodField = value;
                    this.RaisePropertyChanged("AuthenticationMethod");
                }
            }
        }
        
        [DataMember()]
        public string CertificateIssuedByName {
            get {
                return this.CertificateIssuedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateIssuedByNameField, value) != true)) {
                    this.CertificateIssuedByNameField = value;
                    this.RaisePropertyChanged("CertificateIssuedByName");
                }
            }
        }
        
        [DataMember()]
        public string CertificateIssuedForName {
            get {
                return this.CertificateIssuedForNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateIssuedForNameField, value) != true)) {
                    this.CertificateIssuedForNameField = value;
                    this.RaisePropertyChanged("CertificateIssuedForName");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime CertificateValidFrom {
            get {
                return this.CertificateValidFromField;
            }
            set {
                if ((this.CertificateValidFromField.Equals(value) != true)) {
                    this.CertificateValidFromField = value;
                    this.RaisePropertyChanged("CertificateValidFrom");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime CertificateValidTo {
            get {
                return this.CertificateValidToField;
            }
            set {
                if ((this.CertificateValidToField.Equals(value) != true)) {
                    this.CertificateValidToField = value;
                    this.RaisePropertyChanged("CertificateValidTo");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [DataMember()]
        public WorkFlowGroupSigningType IsSigningAllRequired {
            get {
                return this.IsSigningAllRequiredField;
            }
            set {
                if ((this.IsSigningAllRequiredField.Equals(value) != true)) {
                    this.IsSigningAllRequiredField = value;
                    this.RaisePropertyChanged("IsSigningAllRequired");
                }
            }
        }
        
        [DataMember()]
        public int ProcessStepID {
            get {
                return this.ProcessStepIDField;
            }
            set {
                if ((this.ProcessStepIDField.Equals(value) != true)) {
                    this.ProcessStepIDField = value;
                    this.RaisePropertyChanged("ProcessStepID");
                }
            }
        }
        
        [DataMember()]
        public byte[] Signature {
            get {
                return this.SignatureField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureField, value) != true)) {
                    this.SignatureField = value;
                    this.RaisePropertyChanged("Signature");
                }
            }
        }
        
        [DataMember()]
        public int SignatureID {
            get {
                return this.SignatureIDField;
            }
            set {
                if ((this.SignatureIDField.Equals(value) != true)) {
                    this.SignatureIDField = value;
                    this.RaisePropertyChanged("SignatureID");
                }
            }
        }
        
        [DataMember()]
        public string SignatureText {
            get {
                return this.SignatureTextField;
            }
            set {
                if ((object.ReferenceEquals(this.SignatureTextField, value) != true)) {
                    this.SignatureTextField = value;
                    this.RaisePropertyChanged("SignatureText");
                }
            }
        }
        
        [DataMember()]
        public int[] SignedAttachmentList {
            get {
                return this.SignedAttachmentListField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedAttachmentListField, value) != true)) {
                    this.SignedAttachmentListField = value;
                    this.RaisePropertyChanged("SignedAttachmentList");
                }
            }
        }
        
        [DataMember()]
        public int SignedByUser {
            get {
                return this.SignedByUserField;
            }
            set {
                if ((this.SignedByUserField.Equals(value) != true)) {
                    this.SignedByUserField = value;
                    this.RaisePropertyChanged("SignedByUser");
                }
            }
        }
        
        [DataMember()]
        public string SignedByUserName {
            get {
                return this.SignedByUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedByUserNameField, value) != true)) {
                    this.SignedByUserNameField = value;
                    this.RaisePropertyChanged("SignedByUserName");
                }
            }
        }
        
        [DataMember()]
        public string SignedByUserSSN {
            get {
                return this.SignedByUserSSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedByUserSSNField, value) != true)) {
                    this.SignedByUserSSNField = value;
                    this.RaisePropertyChanged("SignedByUserSSN");
                }
            }
        }
        
        [DataMember()]
        public int[] SignedFromList {
            get {
                return this.SignedFromListField;
            }
            set {
                if ((object.ReferenceEquals(this.SignedFromListField, value) != true)) {
                    this.SignedFromListField = value;
                    this.RaisePropertyChanged("SignedFromList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="WorkFlowGroupSigningType", Namespace="http://schemas.altinn.no/services/ServiceEngine/Workflow/2010/10")]
    public enum WorkFlowGroupSigningType : int {
        
        [EnumMember()]
        YES = 1,
        
        [EnumMember()]
        NO = 2,
        
        [EnumMember()]
        SET_PER_FORM = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="ArchivedLookupExternal", Namespace="http://schemas.altinn.no/services/Archive/ArchiveCommon/2010/10")]
    [Serializable()]
    public partial class ArchivedLookupExternal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private System.Nullable<bool> AllowForwardingField;
        
        [OptionalField()]
        private System.DateTime ArchiveDateTimeField;
        
        [OptionalField()]
        private int LanguageTypeIdField;
        
        [OptionalField()]
        private int LookupIDField;
        
        [OptionalField()]
        private AttachmentBEV2 LookupPDFField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public System.Nullable<bool> AllowForwarding {
            get {
                return this.AllowForwardingField;
            }
            set {
                if ((this.AllowForwardingField.Equals(value) != true)) {
                    this.AllowForwardingField = value;
                    this.RaisePropertyChanged("AllowForwarding");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime ArchiveDateTime {
            get {
                return this.ArchiveDateTimeField;
            }
            set {
                if ((this.ArchiveDateTimeField.Equals(value) != true)) {
                    this.ArchiveDateTimeField = value;
                    this.RaisePropertyChanged("ArchiveDateTime");
                }
            }
        }
        
        [DataMember()]
        public int LanguageTypeId {
            get {
                return this.LanguageTypeIdField;
            }
            set {
                if ((this.LanguageTypeIdField.Equals(value) != true)) {
                    this.LanguageTypeIdField = value;
                    this.RaisePropertyChanged("LanguageTypeId");
                }
            }
        }
        
        [DataMember()]
        public int LookupID {
            get {
                return this.LookupIDField;
            }
            set {
                if ((this.LookupIDField.Equals(value) != true)) {
                    this.LookupIDField = value;
                    this.RaisePropertyChanged("LookupID");
                }
            }
        }
        
        [DataMember()]
        public AttachmentBEV2 LookupPDF {
            get {
                return this.LookupPDFField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupPDFField, value) != true)) {
                    this.LookupPDFField = value;
                    this.RaisePropertyChanged("LookupPDF");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AttachmentBEV2", Namespace="http://www.altinn.no/services/ServiceEngine/ReporteeElementList/2010/10")]
    [Serializable()]
    public partial class AttachmentBEV2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [NonSerialized()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [OptionalField()]
        private byte[] AttachmentDataField;
        
        [OptionalField()]
        private AttachmentFunctionType AttachmentFunctionTypeIDField;
        
        [OptionalField()]
        private int AttachmentIDField;
        
        [OptionalField()]
        private string AttachmentNameField;
        
        [OptionalField()]
        private AttachmentType AttachmentTypeIDField;
        
        [OptionalField()]
        private int CreatedByUserIDField;
        
        [OptionalField()]
        private System.DateTime CreatedDateTimeField;
        
        [OptionalField()]
        private UserTypeRestriction DestinationTypeField;
        
        [OptionalField()]
        private string FileNameField;
        
        [OptionalField()]
        private bool IsAddedAfterFormFillinField;
        
        [OptionalField()]
        private bool IsAssociatedToFormSetField;
        
        [OptionalField()]
        private bool IsEncryptedField;
        
        [OptionalField()]
        private int ReporteeElementIDField;
        
        [OptionalField()]
        private string SendersReferenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [DataMember()]
        public byte[] AttachmentData {
            get {
                return this.AttachmentDataField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentDataField, value) != true)) {
                    this.AttachmentDataField = value;
                    this.RaisePropertyChanged("AttachmentData");
                }
            }
        }
        
        [DataMember()]
        public AttachmentFunctionType AttachmentFunctionTypeID {
            get {
                return this.AttachmentFunctionTypeIDField;
            }
            set {
                if ((this.AttachmentFunctionTypeIDField.Equals(value) != true)) {
                    this.AttachmentFunctionTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentFunctionTypeID");
                }
            }
        }
        
        [DataMember()]
        public int AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((this.AttachmentIDField.Equals(value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [DataMember()]
        public string AttachmentName {
            get {
                return this.AttachmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentNameField, value) != true)) {
                    this.AttachmentNameField = value;
                    this.RaisePropertyChanged("AttachmentName");
                }
            }
        }
        
        [DataMember()]
        public AttachmentType AttachmentTypeID {
            get {
                return this.AttachmentTypeIDField;
            }
            set {
                if ((this.AttachmentTypeIDField.Equals(value) != true)) {
                    this.AttachmentTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentTypeID");
                }
            }
        }
        
        [DataMember()]
        public int CreatedByUserID {
            get {
                return this.CreatedByUserIDField;
            }
            set {
                if ((this.CreatedByUserIDField.Equals(value) != true)) {
                    this.CreatedByUserIDField = value;
                    this.RaisePropertyChanged("CreatedByUserID");
                }
            }
        }
        
        [DataMember()]
        public System.DateTime CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [DataMember()]
        public UserTypeRestriction DestinationType {
            get {
                return this.DestinationTypeField;
            }
            set {
                if ((this.DestinationTypeField.Equals(value) != true)) {
                    this.DestinationTypeField = value;
                    this.RaisePropertyChanged("DestinationType");
                }
            }
        }
        
        [DataMember()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [DataMember()]
        public bool IsAddedAfterFormFillin {
            get {
                return this.IsAddedAfterFormFillinField;
            }
            set {
                if ((this.IsAddedAfterFormFillinField.Equals(value) != true)) {
                    this.IsAddedAfterFormFillinField = value;
                    this.RaisePropertyChanged("IsAddedAfterFormFillin");
                }
            }
        }
        
        [DataMember()]
        public bool IsAssociatedToFormSet {
            get {
                return this.IsAssociatedToFormSetField;
            }
            set {
                if ((this.IsAssociatedToFormSetField.Equals(value) != true)) {
                    this.IsAssociatedToFormSetField = value;
                    this.RaisePropertyChanged("IsAssociatedToFormSet");
                }
            }
        }
        
        [DataMember()]
        public bool IsEncrypted {
            get {
                return this.IsEncryptedField;
            }
            set {
                if ((this.IsEncryptedField.Equals(value) != true)) {
                    this.IsEncryptedField = value;
                    this.RaisePropertyChanged("IsEncrypted");
                }
            }
        }
        
        [DataMember()]
        public int ReporteeElementID {
            get {
                return this.ReporteeElementIDField;
            }
            set {
                if ((this.ReporteeElementIDField.Equals(value) != true)) {
                    this.ReporteeElementIDField = value;
                    this.RaisePropertyChanged("ReporteeElementID");
                }
            }
        }
        
        [DataMember()]
        public string SendersReference {
            get {
                return this.SendersReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.SendersReferenceField, value) != true)) {
                    this.SendersReferenceField = value;
                    this.RaisePropertyChanged("SendersReference");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="AttachmentFunctionType", Namespace="http://schemas.altinn.no/services/ServiceEngine/Subscription/2009/10")]
    public enum AttachmentFunctionType : int {
        
        [EnumMember()]
        Unspecified = 1,
        
        [EnumMember()]
        Invoice = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name="UserTypeRestriction", Namespace="http://schemas.altinn.no/services/ServiceEngine/Correspondence/2010/10")]
    public enum UserTypeRestriction : int {
        
        [EnumMember()]
        Default = 0,
        
        [EnumMember()]
        PortalOnly = 1,
        
        [EnumMember()]
        EndUserSystemOnly = 2,
        
        [EnumMember()]
        ShowToAll = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10", ConfigurationName="ReporteeArchive.IReporteeArchiveExternalEC")]
    public interface IReporteeArchiveExternalEC {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://www.altinn.no/services/2009/10) of message TestRequest does not match the default value (http://www.altinn.no/services/Archive/ReporteeArchive/2010/10)
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/2009/10/IAltinnContractBase/Test", ReplyAction="http://www.altinn.no/services/2009/10/IAltinnContractBase/TestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AltinnFault), Action="http://www.altinn.no/services/2009/10/IAltinnContractBase/TestAltinnFaultFault", Name="AltinnFault", Namespace="http://www.altinn.no/services/common/fault/2009/10")]
        TestResponse Test(TestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/2009/10/IAltinnContractBase/Test", ReplyAction="http://www.altinn.no/services/2009/10/IAltinnContractBase/TestResponse")]
        System.Threading.Tasks.Task<TestResponse> TestAsync(TestRequest request);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://www.altinn.no/services/Archive/ReporteeArchive/2010/10 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedFormTaskEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedFormTaskECResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AltinnFault), Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedFormTaskECAltinnFaultFault", Name="AltinnFault", Namespace="http://www.altinn.no/services/common/fault/2009/10")]
        GetArchivedFormTaskECResponse GetArchivedFormTaskEC(GetArchivedFormTaskECRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedFormTaskEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedFormTaskECResponse")]
        System.Threading.Tasks.Task<GetArchivedFormTaskECResponse> GetArchivedFormTaskECAsync(GetArchivedFormTaskECRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedLookupEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedLookupECResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AltinnFault), Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedLookupECAltinnFaultFault", Name="AltinnFault", Namespace="http://www.altinn.no/services/common/fault/2009/10")]
        ArchivedLookupExternal GetArchivedLookupEC(string userName, string password, int reporteeElementId, int languageID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedLookupEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetArchivedLookupECResponse")]
        System.Threading.Tasks.Task<ArchivedLookupExternal> GetArchivedLookupECAsync(string userName, string password, int reporteeElementId, int languageID);
        
        // CODEGEN: Generating message contract since element name userName from namespace http://www.altinn.no/services/Archive/ReporteeArchive/2010/10 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetAttachmentDataEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetAttachmentDataECResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AltinnFault), Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetAttachmentDataECAltinnFaultFault", Name="AltinnFault", Namespace="http://www.altinn.no/services/common/fault/2009/10")]
        GetAttachmentDataECResponse GetAttachmentDataEC(GetAttachmentDataECRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetAttachmentDataEC", ReplyAction="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10/IReporteeArchiveExt" +
            "ernalEC/GetAttachmentDataECResponse")]
        System.Threading.Tasks.Task<GetAttachmentDataECResponse> GetAttachmentDataECAsync(GetAttachmentDataECRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Test", WrapperNamespace="http://www.altinn.no/services/2009/10", IsWrapped=true)]
    public partial class TestRequest {
        
        public TestRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TestResponse", WrapperNamespace="http://www.altinn.no/services/2009/10", IsWrapped=true)]
    public partial class TestResponse {
        
        public TestResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetArchivedFormTaskECRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetArchivedFormTaskEC", Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10", Order=0)]
        public GetArchivedFormTaskECRequestBody Body;
        
        public GetArchivedFormTaskECRequest() {
        }
        
        public GetArchivedFormTaskECRequest(GetArchivedFormTaskECRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    public partial class GetArchivedFormTaskECRequestBody {
        
        [DataMember(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [DataMember(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [DataMember(Order=2)]
        public int reporteeElementId;
        
        [DataMember(Order=3)]
        public System.Nullable<int> languageID;
        
        public GetArchivedFormTaskECRequestBody() {
        }
        
        public GetArchivedFormTaskECRequestBody(string userName, string password, int reporteeElementId, System.Nullable<int> languageID) {
            this.userName = userName;
            this.password = password;
            this.reporteeElementId = reporteeElementId;
            this.languageID = languageID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetArchivedFormTaskECResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetArchivedFormTaskECResponse", Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10", Order=0)]
        public GetArchivedFormTaskECResponseBody Body;
        
        public GetArchivedFormTaskECResponse() {
        }
        
        public GetArchivedFormTaskECResponse(GetArchivedFormTaskECResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    public partial class GetArchivedFormTaskECResponseBody {
        
        [DataMember(Order=0)]
        public ArchivedFormTaskV2 GetArchivedFormTaskECResult;
        
        public GetArchivedFormTaskECResponseBody() {
        }
        
        public GetArchivedFormTaskECResponseBody(ArchivedFormTaskV2 GetArchivedFormTaskECResult) {
            this.GetArchivedFormTaskECResult = GetArchivedFormTaskECResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentDataECRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttachmentDataEC", Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10", Order=0)]
        public GetAttachmentDataECRequestBody Body;
        
        public GetAttachmentDataECRequest() {
        }
        
        public GetAttachmentDataECRequest(GetAttachmentDataECRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    public partial class GetAttachmentDataECRequestBody {
        
        [DataMember(EmitDefaultValue=false, Order=0)]
        public string userName;
        
        [DataMember(EmitDefaultValue=false, Order=1)]
        public string password;
        
        [DataMember(Order=2)]
        public int attachmentId;
        
        public GetAttachmentDataECRequestBody() {
        }
        
        public GetAttachmentDataECRequestBody(string userName, string password, int attachmentId) {
            this.userName = userName;
            this.password = password;
            this.attachmentId = attachmentId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAttachmentDataECResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAttachmentDataECResponse", Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10", Order=0)]
        public GetAttachmentDataECResponseBody Body;
        
        public GetAttachmentDataECResponse() {
        }
        
        public GetAttachmentDataECResponse(GetAttachmentDataECResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [DataContract(Namespace="http://www.altinn.no/services/Archive/ReporteeArchive/2010/10")]
    public partial class GetAttachmentDataECResponseBody {
        
        [DataMember(Order=0)]
        public AttachmentBEV2 GetAttachmentDataECResult;
        
        public GetAttachmentDataECResponseBody() {
        }
        
        public GetAttachmentDataECResponseBody(AttachmentBEV2 GetAttachmentDataECResult) {
            this.GetAttachmentDataECResult = GetAttachmentDataECResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReporteeArchiveExternalECChannel : IReporteeArchiveExternalEC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReporteeArchiveExternalECClient : System.ServiceModel.ClientBase<IReporteeArchiveExternalEC>, IReporteeArchiveExternalEC {
        
        public ReporteeArchiveExternalECClient() {
        }
        
        public ReporteeArchiveExternalECClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReporteeArchiveExternalECClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporteeArchiveExternalECClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporteeArchiveExternalECClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestResponse IReporteeArchiveExternalEC.Test(TestRequest request) {
            return base.Channel.Test(request);
        }
        
        public void Test() {
            TestRequest inValue = new TestRequest();
            TestResponse retVal = ((IReporteeArchiveExternalEC)(this)).Test(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TestResponse> IReporteeArchiveExternalEC.TestAsync(TestRequest request) {
            return base.Channel.TestAsync(request);
        }
        
        public System.Threading.Tasks.Task<TestResponse> TestAsync() {
            TestRequest inValue = new TestRequest();
            return ((IReporteeArchiveExternalEC)(this)).TestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetArchivedFormTaskECResponse IReporteeArchiveExternalEC.GetArchivedFormTaskEC(GetArchivedFormTaskECRequest request) {
            return base.Channel.GetArchivedFormTaskEC(request);
        }
        
        public ArchivedFormTaskV2 GetArchivedFormTaskEC(string userName, string password, int reporteeElementId, System.Nullable<int> languageID) {
            GetArchivedFormTaskECRequest inValue = new GetArchivedFormTaskECRequest();
            inValue.Body = new GetArchivedFormTaskECRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            inValue.Body.reporteeElementId = reporteeElementId;
            inValue.Body.languageID = languageID;
            GetArchivedFormTaskECResponse retVal = ((IReporteeArchiveExternalEC)(this)).GetArchivedFormTaskEC(inValue);
            return retVal.Body.GetArchivedFormTaskECResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetArchivedFormTaskECResponse> IReporteeArchiveExternalEC.GetArchivedFormTaskECAsync(GetArchivedFormTaskECRequest request) {
            return base.Channel.GetArchivedFormTaskECAsync(request);
        }
        
        public System.Threading.Tasks.Task<GetArchivedFormTaskECResponse> GetArchivedFormTaskECAsync(string userName, string password, int reporteeElementId, System.Nullable<int> languageID) {
            GetArchivedFormTaskECRequest inValue = new GetArchivedFormTaskECRequest();
            inValue.Body = new GetArchivedFormTaskECRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            inValue.Body.reporteeElementId = reporteeElementId;
            inValue.Body.languageID = languageID;
            return ((IReporteeArchiveExternalEC)(this)).GetArchivedFormTaskECAsync(inValue);
        }
        
        public ArchivedLookupExternal GetArchivedLookupEC(string userName, string password, int reporteeElementId, int languageID) {
            return base.Channel.GetArchivedLookupEC(userName, password, reporteeElementId, languageID);
        }
        
        public System.Threading.Tasks.Task<ArchivedLookupExternal> GetArchivedLookupECAsync(string userName, string password, int reporteeElementId, int languageID) {
            return base.Channel.GetArchivedLookupECAsync(userName, password, reporteeElementId, languageID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetAttachmentDataECResponse IReporteeArchiveExternalEC.GetAttachmentDataEC(GetAttachmentDataECRequest request) {
            return base.Channel.GetAttachmentDataEC(request);
        }
        
        public AttachmentBEV2 GetAttachmentDataEC(string userName, string password, int attachmentId) {
            GetAttachmentDataECRequest inValue = new GetAttachmentDataECRequest();
            inValue.Body = new GetAttachmentDataECRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            inValue.Body.attachmentId = attachmentId;
            GetAttachmentDataECResponse retVal = ((IReporteeArchiveExternalEC)(this)).GetAttachmentDataEC(inValue);
            return retVal.Body.GetAttachmentDataECResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetAttachmentDataECResponse> IReporteeArchiveExternalEC.GetAttachmentDataECAsync(GetAttachmentDataECRequest request) {
            return base.Channel.GetAttachmentDataECAsync(request);
        }
        
        public System.Threading.Tasks.Task<GetAttachmentDataECResponse> GetAttachmentDataECAsync(string userName, string password, int attachmentId) {
            GetAttachmentDataECRequest inValue = new GetAttachmentDataECRequest();
            inValue.Body = new GetAttachmentDataECRequestBody();
            inValue.Body.userName = userName;
            inValue.Body.password = password;
            inValue.Body.attachmentId = attachmentId;
            return ((IReporteeArchiveExternalEC)(this)).GetAttachmentDataECAsync(inValue);
        }
    }
}
